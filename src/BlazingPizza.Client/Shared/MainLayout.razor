@inherits LayoutComponentBase
@inject IJSRuntime JS

<div class="top-bar">
    <a class="logo" href="">
        <img src="img/logo.svg" />
    </a>

    <NavLink href="" class="nav-tab" Match="NavLinkMatch.All">
        <img src="img/pizza-slice.svg" />
        <div>Menú</div>
    </NavLink>

    <AuthorizeView>
        <NavLink href="myorders" class="nav-tab">
            <img src="img/bike.svg" />
            <div>Mis pedidos</div>
        </NavLink>
    </AuthorizeView>

    <NavLink @onclick="ToggleDarkMode" class="nav-tab theme-toggle">
        <img src="@DarkModeIcon" class="img-nav-tab" />
        <div>@(isDarkMode ? "Modo Claro" : "Modo Oscuro")</div> <!-- Cambio dinámico del texto -->
    </NavLink>

    <div class="nav-tab">   
        <select id="colorBlindMode" @onchange="ChangeColorBlindMode">
            <option value="normal">Normal</option>
            <option value="protanopia">Protanopia</option>
            <option value="deuteranopia">Deuteranopia</option>
            <option value="tritanopia">Tritanopia</option>
        </select>
    </div>

    <LoginDisplay />
</div>

<div class="content">
    @Body
</div>

@code {
    private bool isDarkMode = false;
    private string DarkModeIcon => isDarkMode ? "img/sun.svg" : "img/moon.svg"; // Cambia la imagen

    protected override async Task OnInitializedAsync()
    {
        // Obtiene el valor almacenado en localStorage sobre el estado del modo oscuro.
        var storedMode = await JS.InvokeAsync<string>("localStorage.getItem", "darkMode");
        isDarkMode = storedMode == "true"; // Convierte el valor en bool
        ApplyDarkMode();

        // Obtener modo de daltonismo desde localStorage
        var storedColorMode = await JS.InvokeAsync<string>("localStorage.getItem", "colorBlindMode");
        if (!string.IsNullOrEmpty(storedColorMode))
        {
            await JS.InvokeVoidAsync("applyColorBlindMode", storedColorMode);
        }
    }

    // Función que cambia entre modo claro y oscuro cuando el usuario hace clic en el botón.
    private async Task ToggleDarkMode()
    {
        isDarkMode = !isDarkMode;
        // Guarda el nuevo estado en localStorage para que se recuerde entre sesiones.
        await JS.InvokeVoidAsync("localStorage.setItem", "darkMode", isDarkMode.ToString().ToLower());
        ApplyDarkMode();
    }

    // Función que aplica el modo oscuro en el cuerpo de la página.
    private async void ApplyDarkMode()
    {
        // Agrega o quita la clase dark-mode en el body según el estado actual.
        await JS.InvokeVoidAsync("document.body.classList.toggle", "dark-mode", isDarkMode);
    }

    // Función que aplica el modo daltonismo
    private async Task ChangeColorBlindMode(ChangeEventArgs e)
    {
        string mode = e.Value?.ToString() ?? "normal";
        await JS.InvokeVoidAsync("localStorage.setItem", "colorBlindMode", mode); // Guardar en localStorage
        await JS.InvokeVoidAsync("applyColorBlindMode", mode);
    }
}